X<-3
X<-5
numlist <- c(0,1,2,3,4,5,6,7,8,9)
hello_world<- function (name,excalim=TRUE){if (exclaim==TRUE)}
hello_world<- function(name,excalim=TRUE){if (exclaim==TRUE){return(paste("hello",name,"!"))}else {return(paste("hello",name))}
hello_world
hello_world(sangee,!)
hello_world("sangee","!")
hello_world(sangee,!)
?hello_world
??hello_world
hello_world<- function(name,excalim=TRUE){if (exclaim==TRUE){return(paste("hello",name,"!"))}else {return(paste("hello",name))}
?read.csv()
?read.csv()
clearPushBack()
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
View(demo_table)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo_car.json')
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
demo_table[3,"year]
demo_table[3,"Year]
demo_table[3,"Year"]
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[2,1]
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[2,1]
demo_table$"Vehicle_Class"
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[2,1]
demo_table$"Vehicle_Class"
demo_table$"Name"
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[2,1]
demo_table$"Vehicle_Class"
demo_table$"Name"
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
> ?subset()
?subset()
demo_table[3,"Year"]
demo_table[3.3]
demo_table[3,3]
demo_table[2,1]
demo_table$"Vehicle_Class"
demo_table$"Name"
filter_table <- demo_table2[demo_table2$price > 10000can]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status  )
View(filter_table3)
?sample()
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist)
sample(numlist,3)
sample(numlist,3)
sample(numlist,3)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 2),]
library(tidyverse)
?mutate()
View(demo_table)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 2),]
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
filter_table3 <- subset(demo_table2, year > 2012 & %in% title_status "clean" )
filter_table3 <- subset(demo_table2, year > 2012 & "clean" %in% title_status)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(numlist,3)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 2),]
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2021-Year),IsActive=TRUE)
demo_table <- demo_table %>% mutate(year_old=2021-year),)
demo_table <- demo_table %>% mutate(year_old=2021-year)
demo_table <- demo_table %>% mutate(Years_old=2021-Year)
View(demo_table2)
demo_table <- demo_table %>% mutate(Years_old=2021-Year)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
View(summarize_demo)
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
Vehicle_data <- read.csv('Vehicle_Data.xlsx',check.names = F,stringsAsFactors = F)
View(Vehicle_data)
View(Vehicle_data)
View(Vehicle_data)
View(Vehicle_data)
View(demo_table3)
new.function <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
new.function
new.function(2)
View(Vehicle_data)
Vehicle_data <- read_excel('Vehicle_Data.xlsx',check.names = F,stringsAsFactors = F)
library(readxl)
Vehicle_data <- read_excel('Vehicle_Data.xlsx',check.names = F,stringsAsFactors = F)
Vehicle_data <- read_excel('Vehicle_Data.xlsx')
View(Vehicle_data)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'drop_last')
View(summarize_demo)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?gather()
long_table <- gather(demo_table3,key="buying_price",value="popularity",buying_price:popularity)
View(long_table)
View(demo_table3)
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(Vehicle_data)
View(Vehicle_data)
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
all.equal()
all.equal(demo_table3,wide_table)
table <-demo_table3[,order(colnames(wide_table))]
View(table)
View(table)
View(wide_table)
install.packages("pacman")
library(pacman)
pacman::p_load(pacman,dplyr,GGally,ggplot2,ggthemes,ggvis,httr,lubridate,plotly,rio,rmarkdown,shiny,stringr,tidyr)
p_unload(all)
library(datasets)
?ggplot()
?ggplot2()
library(datasets)
library(ggplot2)
library(datasets)
library(ggplot2)
?ggplot2()
?ggplot()
?aes()
head(mpg)
#data set
head(mtcars)
#check datatype
str(mtcars)
ggplot(mtcars,aes(x=wt)) + geom_density()
library(tidyverse)
ggplot(mtcars,aes(x=wt)) + geom_density()
# quantitative test check data's normal distribution
?shapiro.test()
#Shapiro-Wilk Normality Test
shapiro.test(mtcars$wt)
# Density plot
ggdensity(mtcars$wt, fill = "lightgray")
library(ggdensity)
library(tidyverse)
library(ggpubr)
library(rstatix)
ggdensity(mtcars$wt, fill = "lightgray")
# QQ plot
ggqqplot(mtcars$wt)
library("ggpubr")
library("rstatix")
library(ggpubr)
library(rstatix)
library(tidyverse)
ggdensity(mtcars$wt, fill = "lightgray")
library(ggpubr)
# Density plot
?ggpubr
# Density plot
?ggdensity
Data_set <- c(1,2,3,4,5,6,7,8,9,10)
sample(Data_set)
?sample_n()
?sample()
?sample_n()
library(dplyr)
library(dbplyr)
library(dtplyr)
?sample_n()
library(dplyr)
library(tidyverse)
library(ggplot2)
?read.csv
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
sample_table1 <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table1$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
set.seed(42)
population1 = rnorm(1000)
population2 = sample(population1, 200)
t.test(population2, mu=mean(population1))
population3 = rnorm(1000, -2)
t.test(population2, mu=mean(population3))
sardines <- read.csv(file="../Resources/sardines.csv")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines/Unsolved")
sardines <- read.csv(file="~R_Analysis/01_Demo/03-Stu_Sardines/Unsolved")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines")
sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="/Resources/sardines.csv")
sardines <- read.csv(file="03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv("03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv("file=sardines.csv")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines/Resources")
sardines <- read.csv("file=Resourses/sardines.csv")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines/Unsolved")
sardines <- read.csv("file=Resourses/sardines.csv")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines")
sardines <- read.csv("file=Resourses/sardines.csv")
sardines <- read.csv("file=sardines.csv")
sardines <- read.csv("file=..Resources/sardines.csv")
setwd("~/R_Analysis/01_Demo/03-Stu_Sardines/Resources")
sardines <- read.csv("file=..Resources/sardines.csv")
sardines <- read.csv(file="../Resources/sardines.csv")
View(sardines)
Population_mu_Alaska = subset(sardines, location==1)
Population_mu_sandiego = subset(sardines, location==6)
Alaska = subs
mean(Population_mu_Alaska[['vertebrae']])
mean(Population_mu_sandiego[['vertebrae']])
Sample1=mean(Population_mu_Alaska[['vertebrae']])
Sample2=mean(Population_mu_sandiego[['vertebrae']])
t.test(Sample1,Sample2)
t.test(Population_mu_Alaska[['vertebrae'],Population_mu_sandiego[['vertebrae']])
t.test(Population_mu_Alaska[['vertebrae']],Population_mu_sandiego[['vertebrae']])
setwd("~/R_Analysis/01_Demo")
mecha_coil = read.csv(file='data/Suspension_Coil.csv')
setwd("~/GitHub_local/MechaCar_Statistical_Analysis/data")
mecha_coil = read.csv(file='data/Suspension_Coil.csv')
setwd("~/GitHub_local/MechaCar_Statistical_Analysis")
mecha_coil = read.csv(file='data/Suspension_Coil.csv')
head(mecha_coil)
mecha_mpg = read.csv(file='data/MechaCar_mpg.csv')
shapiro.test(mecha_mpg$mpg)
ggplot(mecha_mpg,aes(x=Vehicle_Weight)) + geom_density()
library(dplyr)
library(tidyverse)
ggplot(mecha_mpg,aes(x=Vehicle_Weight)) + geom_density()
